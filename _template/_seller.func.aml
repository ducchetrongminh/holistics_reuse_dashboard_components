// _template/_seller_func.aml

Func sellerCanvasLayout() {
  CanvasLayout {
    label: 'View 1'
    height: 800
    block txt_title {
      position: pos(190, 20, 550, 70)
    }
    block img_holistics_logo {
      position: pos(70, 20, 70, 90)
    }
    block viz_rev_over_month {
      position: pos(70, 110, 970, 330)
    }
    block viz_by_product {
      position: pos(70, 470, 970, 310)
    }
    block filter_product_id {
      position: pos(800, 20, 240, 70)
    }
  }
}

Func sellerTxtTitle(seller_id: String) {
  TextBlock {
    content: @md ## Ecommerce Performance of ${seller_id};;
  }
}

Func sellerVizRevOverMonth(mapping) {
  VizBlock {
    label: 'Revenue over Month'
    viz: ColumnChart {
      dataset: mapping.dataset
      x_axis: VizFieldFull {
        ref: ref(mapping.orders, 'order_purchase_timestamp')
        transformation: 'datetrunc month'
        format {
          type: 'date'
          pattern: 'LLL yyyy'
        }
      }
      y_axis {
        series {
          field {
            ref: ref(mapping.order_items, 'revenue')
            format {
              type: 'number'
              pattern: 'inherited'
            }
          }
        }
      }
    }
  }
}

Func sellerVizByProduct(mapping) {
  VizBlock {
    label: 'By Product'
    viz: DataTable {
      dataset: mapping.dataset
      fields: [
        VizFieldFull {
          ref: ref(mapping.order_items, 'product_id')
          format {
            type: 'text'
          }
        },
        VizFieldFull {
          ref: ref(mapping.order_items, 'revenue')
          format {
            type: 'number'
            pattern: 'inherited'
          }
        }
      ]
      settings {
        show_row_number: true
        sorts: [
          SortSetting {
            field_index: 1
            direction: 'desc'
          }
        ]
      }
    }
  }
}

Func sellerFilterProductId(mapping) {
  FilterBlock {
    label: 'Product ID'
    type: 'field'
    source: FieldFilterSource {
      dataset: mapping.dataset
      field: ref(mapping.order_items, 'product_id')
    }
    default {
      operator: 'is'
      value: []
    }
  }
}
